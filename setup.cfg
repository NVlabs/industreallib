# Copyright (c) 2022, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# NVIDIA CORPORATION, its affiliates and licensors retain all intellectual
# property and proprietary rights in and to this material, related
# documentation and any modifications thereto. Any use, reproduction,
# disclosure or distribution of this material and related documentation
# without an express license agreement from NVIDIA CORPORATION or
# its affiliates is strictly prohibited.

# Additional files that need to be included in the package distribution must be
# listed in the MANIFEST.in file.
#
# References:
# * https://newbedev.com/how-include-static-files-to-setuptools-python-package

[metadata]

# Configure specific project settings
name = nvidia_srl_industreallib
author = NVIDIA Seattle Robotics Lab
description = "A project that allows researchers to deploy a subset of our RL policies or deploy similar policies of their own in order to transfer contact-rich robotic assembly tasks from simulation to reality."
url = https://github.com/NVlabs/industreallib
license = NVIDIA

# Configure general project settings
long_description = file: README.md
long_description_content_type = text/markdown
license_file = LICENSE

# List of classifiers can be found here:
# https://pypi.org/classifiers/
classifiers =
  License :: Other/Proprietary License
  Operating System :: OS Independent
  Intended Audience :: Developers
  Natural Language :: English
  Programming Language :: Python :: 3
  Topic :: Scientific/Engineering :: Robotics

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Keep all items in alphabetical order within their group.
[options]
# NOTE: Additional versions other than what are listed below for a given package may work. The
# current lower bound version was set by the latest version of the package that was available when
# it was added to the list. The upper bound is the next major version that has not been confirmed to
# work without any errors. Pinned versions are either because that specific version is required, or
# the package has not reached a 1.0.0 version yet.
install_requires =
  # frankapy @ git+https://github.com/iamlab-cmu/frankapy.git
  gym==0.23.1
  inflection>=0.5.1
  # IsaacGymEnvs @ git+https://github.com/NVIDIA-Omniverse/IsaacGymEnvs.git
  kornia>=0.6.12
  omegaconf>=2.3.0
  opencv-python>=4.7.0.72
  pupil_apriltags>=1.0.4.post10
  pycocotools
  pyrealsense2>=2.54.1.5217
  Pillow>=9.5.0
  pycocotools>=2.0.6
  rl-games==1.6.0
  scipy>=1.9.1
  setuptools_scm>=6.4.2,<8.0.0
  torch>=2.0.1
  torchvision>=0.15.2
packages = find_namespace:
package_dir =
  = src
include_package_data = True

[options.packages.find]
where = src
exclude =
  tests

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = package.module:function

# NOTE (roflaherty): Flake8 doesn't support pyproject.toml configuration yet.
[flake8]
select = E,F,W,C,D,I,N,RST
copyright-check = True
# See the following page about NVIDIA's copyright header
# https://confluence.nvidia.com/pages/viewpage.action?pageId=788418816
# copyright-regexp = Copyright \(c\) 20\d{2}(?:-20\d{2})? NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n\#\n\# Licensed under the NVIDIA Source Code License \[see LICENSE for details\].\n[^\s]
copyright-regexp = Copyright \(c\) 20\d{2}(?:-20\d{2})? NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n\#\n\# Licensed under the NVIDIA Source Code License \[see LICENSE for details\].\n[^\s]
max-line-length = 100
docstring-convention = google
exclude =
  .git
  build
  deprecated
  dist
  venv
  wip
  perception/scripts/training/coco_eval.py
  perception/scripts/training/coco_utils.py
  perception/scripts/training/engine.py
  perception/scripts/training/transforms.py
  perception/scripts/training/utils.py

ignore =
  W503 # (this is deprecated, see: https://lintlyci.github.io/Flake8Rules/rules/W503.html)
  E203 # (to be Black compatible)
  E731 # (ignore recommendation to not use lambdas because there is no other way to write a single line function with out warnings)
  RST201,RST203,RST301 # (to be Google Python style compatible, see: https://github.com/peterjc/flake8-rst-docstrings/issues/17)
rst-roles =
  attr
  class
  func
  meth
  mod
  obj
  ref
  term
rst-directives =
  autosummary
  data
  currentmodule
  deprecated
  envvar
  exception
  glossary
  moduleauthor
  plot
  testcode
  versionadded
  versionchanged
rst-substitutions =
  version
# Needed to prevent false N804 and N805 errors when using the `abc` module
# See: https://github.com/pycqa/pep8-naming#options
classmethod-decorators = classmethod,abstractclassmethod
staticmethod-decorators = staticmethod,abstractstaticmethod
